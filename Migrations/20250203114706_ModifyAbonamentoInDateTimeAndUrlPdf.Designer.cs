// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sgchdAPI.Data;

#nullable disable

namespace sgchdAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250203114706_ModifyAbonamentoInDateTimeAndUrlPdf")]
    partial class ModifyAbonamentoInDateTimeAndUrlPdf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("sgchdAPI.Models.Abonamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int>("DocenteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Duracao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlPdf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.ToTable("Abonamentos");
                });

            modelBuilder.Entity("sgchdAPI.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("sgchdAPI.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargaHoraria")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Periodo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("sgchdAPI.Models.DisciplinaDocente", b =>
                {
                    b.Property<int>("DisciplinaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DocenteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DisciplinaId", "DocenteId");

                    b.HasIndex("DocenteId");

                    b.ToTable("DisciplinaDocentes");
                });

            modelBuilder.Entity("sgchdAPI.Models.Docente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("sgchdAPI.Models.DocenteElegivel", b =>
                {
                    b.Property<int>("DisciplinaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DocenteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DisciplinaId", "DocenteId");

                    b.HasIndex("DocenteId");

                    b.ToTable("DocentesElegiveis");
                });

            modelBuilder.Entity("sgchdAPI.Models.Abonamento", b =>
                {
                    b.HasOne("sgchdAPI.Models.Docente", "Docente")
                        .WithMany("Abonamentos")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("sgchdAPI.Models.Disciplina", b =>
                {
                    b.HasOne("sgchdAPI.Models.Curso", "Curso")
                        .WithMany("Disciplinas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("sgchdAPI.Models.DisciplinaDocente", b =>
                {
                    b.HasOne("sgchdAPI.Models.Disciplina", "Disciplina")
                        .WithMany("DisciplinaDocentes")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sgchdAPI.Models.Docente", "Docente")
                        .WithMany("DisciplinaDocentes")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("sgchdAPI.Models.DocenteElegivel", b =>
                {
                    b.HasOne("sgchdAPI.Models.Disciplina", "Disciplina")
                        .WithMany("DocentesElegiveis")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sgchdAPI.Models.Docente", "Docente")
                        .WithMany("DisciplinasElegiveis")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("sgchdAPI.Models.Curso", b =>
                {
                    b.Navigation("Disciplinas");
                });

            modelBuilder.Entity("sgchdAPI.Models.Disciplina", b =>
                {
                    b.Navigation("DisciplinaDocentes");

                    b.Navigation("DocentesElegiveis");
                });

            modelBuilder.Entity("sgchdAPI.Models.Docente", b =>
                {
                    b.Navigation("Abonamentos");

                    b.Navigation("DisciplinaDocentes");

                    b.Navigation("DisciplinasElegiveis");
                });
#pragma warning restore 612, 618
        }
    }
}
